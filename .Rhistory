knitr::opts_chunk$set(echo = TRUE)
suppressMessages(library( fields))
setwd("~/School/MATH498/Test2/")
tDay<- 1:365
load("O3CompleteExample.rda")
# SVD of data,  day by hour
lookSVD<- svd( O3Complete)
#print( lookSVD$d)
D<- diag(lookSVD$d)
# adjust signs to be more interpretable
#
V<- -1*lookSVD$v
U<- -1*lookSVD$u
# weighted basis functions (columns)
VBasis<- V %*%D
fields.style()
matplot( 1:24, VBasis[,1:4], type="l", lty=1, lwd=2,
xlab="hour", ylab="basis function")
title("Basis functions
1 orange, 2 green, 3 blue, 4 red")
N<- nrow(O3Complete )
tm<- tDay[-N] # can only forecast up to the second to last day!
Y<- O3Complete[-1,] # Tommorrows O3
X<-  O3Complete[-N,] # Todays O3
XU<- U[-N,] # todays coefficients
YU<- U[-1,] # tomorows coefficents
print(  round(lookSVD$d^2,0) )
# and normalized as
print(  100*cumsum(lookSVD$d^2)/ sum( lookSVD$d^2) )
ApproxO3<- YU[,1:4]%*% t(VBasis[,1:4])
knitr::opts_chunk$set(echo = TRUE)
suppressMessages(library( fields))
suppressMessages(library( lubridate))
setwd("~/School/MATH498/Test2")
remove( list=ls())
load("ERCOTSCentral.rda")
ls()
meanProfile1<- colMeans( load2017)
meanProfile2<- colMeans( load2018)
matplot(dailyHour, cbind(meanProfile1,meanProfile2),
, type="l", xlab="hours", ylab="load (MW)")
title("South Central ERCOT, 2017 mean profile")
fbplot(dailyHour)
library(fda)
fbplot(dailyHour)
library(fda)
fbplot(load2017)
library(fda)
matplot(dailyHour, cbind(meanProfile1,meanProfile2),
, type="l", xlab="hours", ylab="load (MW)")
title("South Central ERCOT, 2017 mean profile")
fbplot(load2017)
library(fda)
fig
library(fda)
fig()
library(fda)
lines(dailyHour, cbind(meanProfile1,meanProfile2),
, type="l", xlab="hours", ylab="load (MW)")
library(fda)
fbplot(load2017)
lines(dailyHour, cbind(meanProfile1,meanProfile2),
, type="l", xlab="hours", ylab="load (MW)")
library(fda)
fbplot(load2017, xlab="hours",ylab="(MW) Load", title="FBPlot of 2017 data")
library(fda)
fbplot(x=dailyHour, y=load2017[,1:96], xlab="hours",ylab="(MW) Load", title="FBPlot of 2017 data")
library(fda)
fbplot(x=dailyHour, fit=load2017[,1:96], xlab="hours",ylab="(MW) Load", title="FBPlot of 2017 data")
library(fda)
fbplot(x=dailyHour, fit=load2017[,1:96], xlab="hours",ylab="(MW) Load", title="FBPlot of 2017 data")
library(fda)
fbplot(x=dailyHour, fit=load2017, xlab="hours",ylab="(MW) Load", title="FBPlot of 2017 data")
library(fda)
fbplot(t(load2017), xlab="hours",ylab="(MW) Load", title="FBPlot of 2017 data")
svd2017=svd(load2017)
svd2017=svd(load2017)
plot(diag(svd2017$d))
V=svd2017$v
D=diag(svd2017$d)
VB=V%*%D
matplot(VBasis[,1:2], type="l", lty=1, lwd=2,
xlab="hour", ylab="basis function")
V=svd2017$v
D=diag(svd2017$d)
VB=V%*%D
matplot(VB[,1:2], type="l", lty=1, lwd=2,
xlab="hour", ylab="basis function")
title("Basis functions
1 orange, 2 green, 3 blue, 4 red")
N<- nrow(load2017 )
tm<- tDay[-N] # can only forecast up to the second to last day!
N<- nrow(load2017 )
tm<- dailyHour[-N] # can only forecast up to the second to last day!
Y<- load2017[-1,]
X<-  load2017[-N,]
XU<- U[-N,] # todays coefficients
N<- nrow(load2017 )
tm<- dailyHour[-N] # can only forecast up to the second to last day!
Y<- load2017[-1,]
X<-  load2017[-N,]
U=-1*svd2017$u
XU<- U[-N,] # todays coefficients
YU<- U[-1,] # tomorows coefficents
Approxload<- YU[,1:2]%*% t(VB[,1:2])
RMSE=sqrt(mean(U[,1:5]^2))
plot(RMSE)
plot(XU[,1],YU[,1])
O3PC4<- U[,1:5]%*%t(VB[,1:5])
RMSE<-  sqrt(
rowSums( load2017 - O3PC4)^2
)
plot( tDay, (RMSE))
O3PC4<- U[,1:5]%*%t(VB[,1:5])
RMSE<-  sqrt(
rowSums( load2017 - O3PC4)^2
)
plot( dailyHour, (RMSE))
O3PC4<- U[,1:5]%*%t(VB[,1:5])
RMSE<-  sqrt(
rowSums( load2017 - O3PC4)^2
)
plot((RMSE))
loadHat<- U[,1:5]%*%t(VB[,1:5])
RMSE<-  sqrt(
rowSums( load2017 - loadHat)^2
)
plot((RMSE))
maxHat <- apply(loadHat5, 1, max )
maxHat <- apply(loadHat, 1, max )
max2017<- apply(load2017, 1, max )
boxplot(RMSE)
boxplot(loadHat)
mean(RMSE)
mean(loadHat)
look1<- lm(UY[,1:5] ~  UX5 )
UY<- U[-1,]
UX<- U[-N,]
look1<- lm(UY[,1:5] ~  UX5 )
UY<- U[-1,]
UX<- U[-N,]
UX5<- UX[,1:5]
look1<- lm(UY[,1:5] ~  UX5 )
mean(RMSE)
UY<- U[-1,]
UX<- U[-N,]
UX5<- UX[,1:5]
look1<- lm(UY[,1:5] ~  UX5 )
UHat<- look1$fitted.values
O3PC4Hat<- UHat%*%t(VB[,1:4])
mean(RMSE)
UY<- U[-1,]
UX<- U[-N,]
UX5<- UX[,1:5]
look1<- lm(UY[,1:5] ~  UX5 )
UHat<- look1$fitted.values
O3PC4Hat<- UHat%*%t(VB[,1:5])
RMSEPredict<-  sqrt(
rowMeans( load2017[-1,] - O3PC4Hat)^2
)
mean(RMSEPredict)
